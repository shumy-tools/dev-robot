plugins {
  id 'org.jetbrains.kotlin.jvm' version '1.3.70'
  id 'antlr'
  id 'application'
  id 'com.adarshr.test-logger' version '2.0.0'
}

group 'net.dev-robot'
version '0.0.1'

repositories {
  jcenter()
}

sourceSets {
  main.java.srcDirs += 'gen-src'
}

/**
 * Without the next section Gradle will add a 'compile' dependency on Antlr3:
 * https://github.com/gradle/gradle/issues/820
 */
configurations {
  compile {
    extendsFrom = extendsFrom.findAll { it != configurations.antlr }
  }
}

dependencies {
  antlr 'org.antlr:antlr4:4.8'

  implementation platform('org.jetbrains.kotlin:kotlin-bom')
  implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
  implementation 'org.jetbrains.kotlin:kotlin-reflect'

  implementation 'org.antlr:antlr4-runtime:4.8'
  implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8'
  implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.3'

  implementation 'io.javalin:javalin:3.8.0'
  implementation 'org.slf4j:slf4j-simple:1.8.0-beta4'

  implementation 'com.zaxxer:HikariCP:3.4.3'
  implementation 'com.h2database:h2:1.4.200'

  testImplementation 'org.jetbrains.kotlin:kotlin-test'
  testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
}

application {
  mainClassName = 'dr.AppKt'
}

generateGrammarSource {
  maxHeapSize = '64m'
  arguments += ['-package', 'dr.query']
  outputDirectory = file('gen-src/dr/query')
}

compileKotlin {
  dependsOn generateGrammarSource
  kotlinOptions {
    freeCompilerArgs += '-Xuse-experimental=kotlin.ExperimentalStdlibApi'
  }
}

clean.doLast {
  file('gen-src').deleteDir()
}